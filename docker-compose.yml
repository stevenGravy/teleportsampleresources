version: '2'
services:
  teleportnodedev:
    restart: always
    image: teleportnode
    build: ./docker/ubuntu
    container_name: teleportnodedev
    entrypoint: /bin/sh
    hostname: nodedev.example
    command: -c "/usr/local/bin/teleport start ${ADDITIONAL_AGENT_PARAMETERS}"
    volumes:
      - ./node/teleport-dev.yaml:/etc/teleport.yaml
      - teleportdev:/var/lib/teleport
      - ./node/token:/tmp/token
  teleportnodeprod:
    restart: always
    image: teleportnode
    build: ./docker/ubuntu
    container_name: teleportnodeprod
    entrypoint: /bin/sh
    hostname: nodeprod.example
    command: -c "/usr/local/bin/teleport start ${ADDITIONAL_AGENT_PARAMETERS}"
    volumes:
      - ./node/teleport-prod.yaml:/etc/teleport.yaml
      - teleportprod:/var/lib/teleport
      - ./node/token:/tmp/token
  teleport:
    image: ${TELEPORT_DOCKER_IMAGE}:${TELEPORT_VERSION}
    container_name: teleport
    hostname: teleport.example
    volumes:
      - teleport:/var/lib/teleport
      - ./node/teleport.yaml:/etc/teleport/teleport.yaml
      - ./node/token:/tmp/token
  grafana-dev:
    image: grafana/grafana
    container_name: grafana-dev
    user: root
    restart: unless-stopped
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafanadev:/var/lib/grafana
    hostname: grafana
  grafana-prod:
    image: grafana/grafana
    container_name: grafana-prod
    user: root
    restart: unless-stopped
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafanaprod:/var/lib/grafana
    hostname: grafana
  postgresdev:
    image: postgres:16.0
    container_name: postgresdev
    hostname: postgresdev.example

    environment:
      - POSTGRES_USER=postgres # The PostgreSQL user (useful to connect to the database)
      - POSTGRES_PASSWORD=faddcd54-8f33-11f0-9d9f-0ee6e8c6731f # The PostgreSQL password (useful to connect to the database)
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
    - dbdevdata:/var/lib/postgresql/data/
    - ./postgres-initdb:/docker-entrypoint-initdb.d/
    - ./dbdev:/var/lib/postgresql/certs/
  postgresprod:
    image: postgres:16.0
    container_name: postgresprod
    hostname: postgresprod.example

    environment:
      - POSTGRES_USER=postgres # The PostgreSQL user (useful to connect to the database)
      - POSTGRES_PASSWORD=password12 # The PostgreSQL password (useful to connect to the database)
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
    - dbproddata:/var/lib/postgresql/data/
    - ./postgres-initdb:/docker-entrypoint-initdb.d/
    - ./dbprod:/var/lib/postgresql/certs/

volumes:
  teleportdev:
  teleportprod:
  teleport:
  dbproddata:
  dbdevdata:
  grafanadev:
  grafanaprod:
